openapi: 3.0.0
info:
  title: Documentation api
  version: '1.0'
  description: API to manage your wealth
  contact:
    name: Josimar Camilo
    email: josimarcamilo2100@gmail.com
servers:
  - url: http://127.0.0.1:8000
tags:
  - name: users
  - name: auth
    description: Authentication routes
paths:
  /api/users:
    post:
      tags:
        - users
      summary: create one user
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      email:
                        type: string
                        description: email to user
                      updated_at:
                        type: string
                        description: date created user
                      created_at:
                        type: string
                        description: date updated user
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Message of return
                    example: Token could not be parsed from the request.
        '422':
          description: Unprocessable Content
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: User already exists
                    example: User already exists
  /api/auth/login:
    post:
      tags:
        - auth
      summary: realiza login
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Successfully logged out
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: Message of return
                  token_type:
                    type: string
                    description: Message of return
                    example: bearer
                  expires_in_minutes:
                    type: integer
                    description: Expires in minutes
                    example: 1440
  /api/auth/me:
    get:
      tags:
        - auth
      summary: return user authenticated
      operationId: me
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: Message of return
                  email:
                    type: string
                    description: Message of return
  /api/auth/refresh:
    post:
      tags:
        - auth
      summary: return user authenticated
      operationId: refresh
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
  /api/auth/logout:
    get:
      tags:
        - auth
      summary: logout user
      operationId: logout
      security:
        - bearerAuth: []
      responses:
        '200':
            description: Successfully logged out
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Message of return
                      example: Successfully logged out
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Message of return
                    example: Token could not be parsed from the request.
components:
  schemas:
    UserCreate:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          description: Name to user
          example: user test
          type: string
        email:
          description: E-mail do usu치rio
          example: orfed@orfed.com.br
          type: string
        password:
          description: E-mail do usu치rio
          example: admin
          type: string
    Login:
      type: object
      required:
        - email
        - password
      properties:
        email:
          description: E-mail do usu치rio
          example: orfed@orfed.com.br
          type: string
        password:
          description: E-mail do usu치rio
          example: admin
          type: string
    Token:
      type: object
      properties:
        access_token:
          type: string
          description: Message of return
        token_type:
          type: string
          description: Message of return
          example: bearer
        expires_in_minutes:
          type: integer
          description: Expires in minutes
          example: 1440
  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid
      content:
            'application/json': {}
      headers:
        WWW_Authenticate:
          schema:
            type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT